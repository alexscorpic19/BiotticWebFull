name: Deploy BiotticWebFull to VPS

on:
  push:
    branches:
      - main # O la rama que uses para producción

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push backend image
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./deployment/Dockerfile.backend
          push: true
          tags: ghcr.io/${{ github.repository_owner }}/biottic-backend:${{ github.sha }}

      - name: Build and push frontend image
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./deployment/Dockerfile.frontend
          push: true
          tags: ghcr.io/${{ github.repository_owner }}/biottic-frontend:${{ github.sha }}

  deploy:
    needs: build-and-push
    runs-on: ubuntu-latest

    steps:
      - name: Prepare backend .env file
        id: create_backend_env
        run: |
          ENV_CONTENT=$(cat <<EOF
MONGO_URI=${{ secrets.MONGO_URI }}
JWT_SECRET=${{ secrets.JWT_SECRET }}
PORT=5000
NODE_ENV=production
WOMPI_PUBLIC_KEY=${{ secrets.WOMPI_PUBLIC_KEY }}
WOMPI_PRIVATE_KEY=${{ secrets.WOMPI_PRIVATE_KEY }}
WOMPI_EVENTS_SECRET=${{ secrets.WOMPI_EVENTS_SECRET }}
WOMPI_INTEGRITY_SECRET=${{ secrets.WOMPI_INTEGRITY_SECRET }}
EOF
          )
          echo "backend_env_b64=$(echo "$ENV_CONTENT" | base64 -w 0)" >> $GITHUB_OUTPUT

      - name: Prepare frontend .env file
        id: create_frontend_env
        run: |
          ENV_CONTENT="VITE_API_URL=${{ secrets.VITE_API_URL }}"
          echo "frontend_env_b64=$(echo "$ENV_CONTENT" | base64 -w 0)" >> $GITHUB_OUTPUT

      - name: Deploy to VPS
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.VPS_SSH_HOST }}
          username: ${{ secrets.VPS_SSH_USER }}
          key: ${{ secrets.VPS_SSH_PRIVATE_KEY }}
          env:
            BACKEND_ENV_B64: ${{ steps.create_backend_env.outputs.backend_env_b64 }}
            FRONTEND_ENV_B64: ${{ steps.create_frontend_env.outputs.frontend_env_b64 }}
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
            GITHUB_REPO_OWNER: ${{ github.repository_owner }}
            IMAGE_TAG: ${{ github.sha }}
          script: |
            PROJECT_DIR="/home/deployer/biottic-web-app"

            # Clonar o actualizar el repositorio de forma robusta
            if [ -d "$PROJECT_DIR/.git" ]; then
              echo "Repository exists, pulling changes..."
              cd "$PROJECT_DIR"
              git pull
            else
              echo "Repository does not exist, cloning fresh..."
              rm -rf "$PROJECT_DIR"
              git clone https://github.com/alexscorpic19/BiotticWebFull.git "$PROJECT_DIR"
              cd "$PROJECT_DIR"
            fi

            # Decodificar y crear los archivos .env a partir de Base64
            echo $BACKEND_ENV_B64 | base64 -d > ./backend/.env
            echo $FRONTEND_ENV_B64 | base64 -d > ./frontend/.env

            # Iniciar sesión en GHCR en el VPS
            echo $GITHUB_TOKEN | docker login ghcr.io -u $GITHUB_REPO_OWNER --password-stdin

            # Usar "docker compose" (con espacio)
            docker compose -f deployment/docker-compose.yml pull
            docker compose -f deployment/docker-compose.yml up -d
